# Generated by Django 3.1.7 on 2021-04-25 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название города(района)')),
            ],
            options={
                'verbose_name': 'Город(район)',
                'verbose_name_plural': 'Города(районы)',
            },
        ),
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='команда')),
            ],
            options={
                'verbose_name': 'команда',
                'verbose_name_plural': 'команды',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(help_text='короткое название группы', max_length=10, unique=True, verbose_name='возр гр')),
                ('name_long', models.CharField(help_text='полное название группы', max_length=70, unique=True, verbose_name='описание')),
                ('sex', models.CharField(choices=[('М', 'М'), ('Ж', 'Ж')], max_length=1, verbose_name='Пол')),
                ('start_year', models.PositiveSmallIntegerField(default=0, verbose_name='нач дата')),
                ('end_year', models.PositiveSmallIntegerField(default=0, verbose_name='кон дата')),
            ],
            options={
                'verbose_name': 'Возрастная группа',
                'verbose_name_plural': 'Возрастные группы',
            },
        ),
        migrations.CreateModel(
            name='Human',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('sex', models.CharField(blank=True, choices=[('М', 'М'), ('Ж', 'Ж')], max_length=1, null=True, verbose_name='Пол')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='human', to='digest.city', verbose_name='город(регион)')),
                ('user_human', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='human', to=settings.AUTH_USER_MODEL, verbose_name='связь с User')),
            ],
            options={
                'verbose_name': 'Люди',
                'verbose_name_plural': 'Людей',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название региона')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='StatusEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус события',
                'verbose_name_plural': 'Список статусов событий',
            },
        ),
        migrations.CreateModel(
            name='VidSporta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='вид спорта')),
                ('kod', models.CharField(max_length=11, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'вид Спорта',
                'verbose_name_plural': 'виды Спорта',
            },
        ),
        migrations.CreateModel(
            name='UserPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, unique=True, verbose_name='№ Телефона')),
                ('human', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='digest.human', verbose_name='человек')),
            ],
            options={
                'verbose_name': '№ телефона',
                'verbose_name_plural': '№ телефонов',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('avatar', models.ImageField(blank=True, upload_to='Trainer', verbose_name='Фото')),
                ('human', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='digest.human', verbose_name='id человека')),
            ],
            options={
                'verbose_name': 'тренер',
                'verbose_name_plural': 'тренера',
            },
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('ССВК', 'Высшая категория (ССВК)'), ('СС1К', 'Первая категория (СС1К)'), ('СС2К', 'Вторая категория (СС2К)'), ('СС3К', 'Третья категория (СС3К)')], max_length=4, verbose_name='категория')),
                ('status', models.BooleanField(choices=[(1, 'Атестован'), (0, 'Не атестован')], default=1, verbose_name='статус')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='digest.city', verbose_name='город(регион)')),
                ('human', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='digest.human', verbose_name='id участникa')),
            ],
            options={
                'verbose_name': 'судья',
                'verbose_name_plural': 'судьи',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chip', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='№ чипа')),
                ('avatar', models.ImageField(blank=True, upload_to='Participant', verbose_name='Фото')),
                ('human', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='digest.human', verbose_name='id человека')),
                ('trainers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participant', to='digest.trainer', verbose_name='id тренера')),
            ],
            options={
                'verbose_name': 'участник',
                'verbose_name_plural': 'участники',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='место проведения')),
                ('cities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='digest.city', verbose_name='Город(район)')),
            ],
            options={
                'verbose_name': 'место проведения',
                'verbose_name_plural': 'места проведения',
            },
        ),
        migrations.CreateModel(
            name='KodEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('kod', models.CharField(max_length=11, unique=True, verbose_name='Код')),
                ('vid_sporta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kod_vid', to='digest.vidsporta', verbose_name='вид соревнования')),
            ],
            options={
                'verbose_name': 'вид Дисциплины',
                'verbose_name_plural': 'виды дисциплин',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='regions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='digest.region', verbose_name='Регион'),
        ),
    ]
